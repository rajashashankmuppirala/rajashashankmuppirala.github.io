{"version":3,"sources":["App/assets/animals/bee.png","App/assets/animals/cheetah.png","App/assets/animals/croc.png","App/assets/animals/deer.png","App/assets/animals/dog.png","App/assets/animals/dolphin.png","App/assets/animals/elephant.png","App/assets/animals/fox.png","App/assets/animals/giraffe.png","App/assets/animals/kangaroo.png","App/assets/animals/koala.png","App/assets/animals/lemur.png","App/assets/animals/monkey.png","App/assets/animals/ostrich.png","App/assets/animals/panda.png","App/assets/animals/rabbit.png","App/assets/animals/rhino.png","App/assets/animals/shark.png","App/assets/animals/sheep.png","App/assets/animals/snake.png","App/assets/animals/tiger.png","App/assets/animals/tortoise.png","App/assets/animals/tucan.png","App/assets/animals/zebra.png","App/assets/card.png","App/data/availableCards.js","App/styles/styles.js","App/card/Card.js","App/row/Row.js","App/dashboard/Timer.js","App/dashboard/Moves.js","App/board/Board.js","index.js"],"names":["module","exports","AVAILABLE_CARDS","require","screen","Dimensions","get","CARD_WIDTH","Math","floor","width","CARD_HEIGHT","styles","StyleSheet","create","container","backgroundColor","paddingTop","flex","title","alignItems","justifyContent","textAlign","color","fontSize","timer","safearea","row","flexDirection","marginVertical","card","borderColor","borderWidth","borderRadius","cardImage","height","Card","onPress","this","props","solved","isDisabled","displayImage","display","TouchableOpacity","disabled","View","style","Image","source","React","Component","Row","children","Timer","initTimer","setInterval","setState","prevState","refreshTimer","clearInterval","state","Text","id","Moves","total","Board","initRows","arr","rows","columns","length","r","random","indexOf","push","concat","shuffleArray","map","i","index","cardObj","value","array","newArr","slice","j","x","reset","timerElement","current","lastselected","moves","count","onCardSelect","a","rowIndex","Object","keys","onFinish","setTimeout","displayAlert","Platform","OS","Alert","alert","text","cancelable","window","confirm","createRef","StatusBar","barStyle","ref","SafeAreaView","key","AppRegistry","registerComponent","appName","runApplication","rootTag","document","getElementById"],"mappings":"wNAAAA,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,6HCA9BC,EAAkB,CAsD7BC,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,K,+DC3EJC,EAASC,IAAWC,IAAI,UACxBC,EAAaC,KAAKC,MAAqB,KAAfL,EAAOM,OAC/BC,EAAcH,KAAKC,MAAMF,GAAc,IAAM,MA6CpCK,EA3CAC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,gBAAiB,OACjBC,WAAY,GACZC,KAAM,GAERC,MAAO,CACLC,WAAY,SACZC,eAAgB,SAChBC,UAAW,SACXC,MAAO,QACPC,SAAU,IAEZC,MAAO,CACLL,WAAY,SACZC,eAAgB,SAChBC,UAAW,SACXC,MAAO,QACPC,SAAU,IAEZE,SAAU,CACRN,WAAY,SACZC,eAAgB,SAChBH,KAAM,GAERS,IAAK,CACHC,cAAe,MACfP,eAAgB,eAChBD,WAAY,SACZV,MAAO,OACPmB,eAAgB,IAElBC,KAAM,CACJd,gBAAiB,OACjBe,YAAa,OACbC,YAAa,EACbC,aAAc,GAEhBC,UAAW,CACTxB,MAAOH,EACP4B,OAAQxB,K,iBCvBGyB,E,uKAjBX,IAAMC,EAAUC,KAAKC,MAAMF,QACrBG,EAASF,KAAKC,MAAMC,OACpBC,EAAaH,KAAKC,MAAME,WACxBC,EAAeJ,KAAKC,MAAMI,QAC5BL,KAAKC,MAAMG,aACXvC,EAAQ,IAEZ,OACE,kBAACyC,EAAA,EAAD,CAAkBC,SAAUL,GAAUC,EAAYJ,QAASA,GACzD,kBAACS,EAAA,EAAD,CAAMC,MAAOnC,EAAOkB,MAClB,kBAACkB,EAAA,EAAD,CAAOD,MAAOnC,EAAOsB,UAAWe,OAAQP,U,GAZ/BQ,IAAMC,WCMVC,E,uKAJX,OAAO,kBAACN,EAAA,EAAD,CAAMC,MAAOnC,EAAOe,KAAMW,KAAKC,MAAMc,c,GAF9BH,IAAMC,WCkCTG,E,kDAjCb,aAAe,IAAD,8BACZ,gBAOFC,UAAY,WACV,EAAK9B,MAAQ+B,aAAY,WACvB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BjC,MAAOiC,EAAUjC,MAAQ,QAE1B,MAbS,EAgBdkC,aAAe,WACbC,cAAc,EAAKnC,OACnB,EAAKgC,SAAS,CAAChC,MAAO,IACtB,EAAK8B,aAjBL,EAAKM,MAAQ,CACXpC,MAAO,GAET,EAAK8B,YALO,E,qDAuBZ,OACE,kBAACX,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CAAMf,MAAOnC,EAAOa,MAAOsC,GAAG,SAA9B,SACSzB,KAAKuB,MAAMpC,Y,GA3BRyB,IAAMC,WCeXa,E,uKAbX,OACE,kBAACpB,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CAAMf,MAAOnC,EAAOa,MAAOsC,GAAG,SAA9B,SACSzB,KAAKC,MAAM0B,OAEpB,kBAACH,EAAA,EAAD,CAAMf,MAAOnC,EAAOa,MAAOsC,GAAG,SAA9B,UACUzB,KAAKC,MAAMC,a,GARTU,IAAMC,WC6LXe,E,kDAhLb,aAAe,IAAD,8BACZ,gBAWFC,SAAW,WAKT,IAJA,IAAIC,EAAM,GACNC,EAAO,GACPC,EAAU,GAEPF,EAAIG,OAAS,IAAQ,CAC1B,IAAIC,EAAIhE,KAAKC,MAAsB,GAAhBD,KAAKiE,WACA,IAApBL,EAAIM,QAAQF,IACdJ,EAAIO,KAAKH,GAkBb,OAfAJ,EAAMA,EAAIQ,OAAOR,IACjBA,EAAM,EAAKS,aAAaT,IAEpBU,KAAI,SAACC,EAAGC,GACV,IAAIC,EAAU,GACdA,EAAQlB,GAAKiB,EACbC,EAAQtC,SAAU,EAClBsC,EAAQzC,QAAS,EACjByC,EAAQC,MAAQhF,EAAgB6E,GAChCT,EAAQK,KAAKM,IACRD,EAAQ,GAAK,IAAM,IACtBX,EAAKM,KAAKL,GACVA,EAAU,OAGPD,GAtCK,EAyCdQ,aAAe,SAACM,GAEd,IADA,IAAMC,EAASD,EAAME,QACZN,EAAIK,EAAOb,OAAQQ,EAAGA,GAAK,EAAG,CACrC,IAAMO,EAAI9E,KAAKC,MAAMD,KAAKiE,SAAWM,GAC/BQ,EAAIH,EAAOL,EAAI,GACrBK,EAAOL,EAAI,GAAKK,EAAOE,GACvBF,EAAOE,GAAKC,EAEd,OAAOH,GAjDK,EAoDdI,MAAQ,WACN,EAAKC,aAAaC,QAAQ/B,eAC1B,IAAIU,EAAO,EAAKF,WAChB,EAAKV,SAAS,CACZY,KAAMA,EACNsB,aAAc,GACdC,MAAO,EACPC,MAAO,EACPpD,YAAY,KA5DF,EAgEdqD,aAhEc,uCAgEC,WAAOhE,GAAP,SAAAiE,EAAA,6DACb,EAAKlC,MAAMQ,KAAKS,KAAI,SAACnD,EAAKqE,GACxBrE,EAAImD,IAAJ,uCAAQ,WAAON,GAAP,SAAAuB,EAAA,yDACFvB,EAAET,KAAOjC,EAAKiC,GADZ,oBAEJS,EAAE7B,SAAU,EACwC,IAAhDsD,OAAOC,KAAK,EAAKrC,MAAM8B,cAAcpB,OAHrC,gBAIF,EAAKd,SAAS,CAACkC,aAAcnB,IAJ3B,0BAOAA,EAAEU,QAAU,EAAKrB,MAAM8B,aAAaT,OACpCV,EAAET,KAAO,EAAKF,MAAM8B,aAAa5B,GARjC,wBAUAS,EAAEhC,QAAS,EAVX,UAWM,EAAKiB,SAAS,CAClBmC,MAAO,EAAK/B,MAAM+B,MAAQ,EAC1BC,MAAO,EAAKhC,MAAMgC,MAAQ,IAb5B,eAeA,EAAKhC,MAAMQ,KAAKS,KAAI,SAACnD,EAAKqE,GACxBrE,EAAImD,KAAI,SAACN,GACHA,EAAET,KAAO,EAAKF,MAAM8B,aAAa5B,KACnCS,EAAEhC,QAAS,EACX,EAAKqB,MAAM8B,aAAe,UAnBhC,UAuBM,EAAKlC,SAAS,CAACY,KAAM,EAAKR,MAAMQ,OAvBtC,QAwBwB,GAApB,EAAKR,MAAMgC,OACb,EAAKM,WAzBP,wBA4BAC,YAAW,WACT,EAAKvC,MAAMQ,KAAKS,KAAI,SAACnD,EAAKqE,GACxBrE,EAAImD,KAAI,SAACN,GAELA,EAAET,KAAO,EAAKF,MAAM8B,aAAa5B,KACpB,IAAbS,EAAEhC,SAEFgC,EAAE7B,SAAU,EACZb,EAAKa,SAAU,EACf,EAAKc,SAAS,CACZmC,MAAO,EAAK/B,MAAM+B,MAAQ,EAC1BD,aAAc,GACdlD,YAAY,WAKpB,EAAKgB,SAAS,CAACY,KAAM,EAAKR,MAAMQ,SAC/B,KACH,EAAKR,MAAMpB,YAAa,EA/CxB,4CAAR,0DAFW,SAuDP,EAAKgB,SAAS,CAACY,KAAM,EAAKR,MAAMQ,OAvDzB,2CAhED,wDA0HdgC,aAAe,WACO,QAAhBC,IAASC,GAUXC,IAAMC,MACJ,oBADF,yCAEoC,EAAK5C,MAAM+B,MAF/C,WAGE,CAAC,CAACc,KAAM,KAAMrE,QAAS,EAAKmD,QAC5B,CAACmB,YAAY,IAbOC,OAAOC,QAC3B,6DACoC,EAAKhD,MAAM+B,MAD/C,aAIA,EAAKJ,SAjIG,EA8IdW,SAAW,WACTC,YAAW,kBAAM,EAAKC,iBAAgB,IA7ItC,EAAKxC,MAAQ,CACXQ,KAAM,EAAKF,WACXwB,aAAc,GACdC,MAAO,EACPC,MAAO,EACPpD,YAAY,GAEd,EAAKgD,aAAevC,IAAM4D,YATd,E,qDAkJJ,IAAD,OACP,OACE,kBAAChE,EAAA,EAAD,CAAMC,MAAOnC,EAAOG,WAClB,kBAACgG,EAAA,EAAD,CAAWC,SAAS,kBACpB,kBAAClD,EAAA,EAAD,CAAMf,MAAOnC,EAAOO,OAApB,wBACA,kBAAC,EAAD,CAAO8F,IAAK3E,KAAKmD,eACjB,kBAAC,EAAD,CAAOxB,MAAO3B,KAAKuB,MAAM+B,MAAOpD,OAAQF,KAAKuB,MAAMgC,QACnD,kBAACqB,EAAA,EAAD,CAAcnE,MAAOnC,EAAOc,UACzBY,KAAKuB,MAAMQ,KAAKS,KAAI,SAACnD,EAAKqE,GAAN,OACnB,kBAAC,EAAD,CAAKmB,IAAKnB,EAAUhB,MAAOgB,GACxBrE,EAAImD,KAAI,SAAChD,EAAMkD,GACd,OACE,kBAAC,EAAD,CACEmC,IAAKrF,EAAKiC,GACVtB,WAAY,EAAKoB,MAAMpB,WACvBE,QAASb,EAAKa,QACdH,OAAQV,EAAKU,OACbE,aAAcZ,EAAKoD,MACnB7C,QAAS,kBAAM,EAAKyD,aAAahE,mB,GArKjCoB,IAAMC,W,QCR1BiE,IAAYC,kBAAkBC,KAAS,kBAAMpD,KAC7CkD,IAAYG,eAAeD,IAAS,CAClCE,QAASC,SAASC,eAAe,oB","file":"static/js/main.aabf560e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bee.ee9a8073.png\";","module.exports = __webpack_public_path__ + \"static/media/cheetah.b7262f53.png\";","module.exports = __webpack_public_path__ + \"static/media/croc.0e41b832.png\";","module.exports = __webpack_public_path__ + \"static/media/deer.5b9a2f77.png\";","module.exports = __webpack_public_path__ + \"static/media/dog.bfe4271b.png\";","module.exports = __webpack_public_path__ + \"static/media/dolphin.40b9276b.png\";","module.exports = __webpack_public_path__ + \"static/media/elephant.cb52ba95.png\";","module.exports = __webpack_public_path__ + \"static/media/fox.65532169.png\";","module.exports = __webpack_public_path__ + \"static/media/giraffe.6769b4c1.png\";","module.exports = __webpack_public_path__ + \"static/media/kangaroo.36602689.png\";","module.exports = __webpack_public_path__ + \"static/media/koala.0907daa2.png\";","module.exports = __webpack_public_path__ + \"static/media/lemur.b7991b0a.png\";","module.exports = __webpack_public_path__ + \"static/media/monkey.9c22ed4a.png\";","module.exports = __webpack_public_path__ + \"static/media/ostrich.b2dc5cca.png\";","module.exports = __webpack_public_path__ + \"static/media/panda.6f844508.png\";","module.exports = __webpack_public_path__ + \"static/media/rabbit.bf9198bf.png\";","module.exports = __webpack_public_path__ + \"static/media/rhino.8bcd07a1.png\";","module.exports = __webpack_public_path__ + \"static/media/shark.05b18c56.png\";","module.exports = __webpack_public_path__ + \"static/media/sheep.937ee6c0.png\";","module.exports = __webpack_public_path__ + \"static/media/snake.bad46740.png\";","module.exports = __webpack_public_path__ + \"static/media/tiger.2218c52f.png\";","module.exports = __webpack_public_path__ + \"static/media/tortoise.8c4e7aaa.png\";","module.exports = __webpack_public_path__ + \"static/media/tucan.9df862bc.png\";","module.exports = __webpack_public_path__ + \"static/media/zebra.26d43ecd.png\";","module.exports = __webpack_public_path__ + \"static/media/card.33d780bd.png\";","export const AVAILABLE_CARDS = [\n  /*  require('../assets/playing-cards/2_of_clubs.png'),\n  require('../assets/playing-cards/3_of_clubs.png'),\n  require('../assets/playing-cards/4_of_clubs.png'),\n  require('../assets/playing-cards/5_of_clubs.png'),\n  require('../assets/playing-cards/6_of_clubs.png'),\n  require('../assets/playing-cards/7_of_clubs.png'),\n  require('../assets/playing-cards/8_of_clubs.png'),\n  require('../assets/playing-cards/9_of_clubs.png'),\n  require('../assets/playing-cards/10_of_clubs.png'),\n  require('../assets/playing-cards/ace_of_clubs.png'),\n  require('../assets/playing-cards/jack_of_clubs.png'),\n  require('../assets/playing-cards/queen_of_clubs.png'),\n  require('../assets/playing-cards/king_of_clubs.png'),\n  require('../assets/playing-cards/2_of_diamonds.png'),\n  require('../assets/playing-cards/3_of_diamonds.png'),\n  require('../assets/playing-cards/4_of_diamonds.png'),\n  require('../assets/playing-cards/5_of_diamonds.png'),\n  require('../assets/playing-cards/6_of_diamonds.png'),\n  require('../assets/playing-cards/7_of_diamonds.png'),\n  require('../assets/playing-cards/8_of_diamonds.png'),\n  require('../assets/playing-cards/9_of_diamonds.png'),\n  require('../assets/playing-cards/10_of_diamonds.png'),\n  require('../assets/playing-cards/ace_of_diamonds.png'),\n  require('../assets/playing-cards/jack_of_diamonds.png'),\n  require('../assets/playing-cards/queen_of_diamonds.png'),\n  require('../assets/playing-cards/king_of_diamonds.png'),\n  require('../assets/playing-cards/2_of_hearts.png'),\n  require('../assets/playing-cards/3_of_hearts.png'),\n  require('../assets/playing-cards/4_of_hearts.png'),\n  require('../assets/playing-cards/5_of_hearts.png'),\n  require('../assets/playing-cards/6_of_hearts.png'),\n  require('../assets/playing-cards/7_of_hearts.png'),\n  require('../assets/playing-cards/8_of_hearts.png'),\n  require('../assets/playing-cards/9_of_hearts.png'),\n  require('../assets/playing-cards/10_of_hearts.png'),\n  require('../assets/playing-cards/ace_of_hearts.png'),\n  require('../assets/playing-cards/jack_of_hearts.png'),\n  require('../assets/playing-cards/queen_of_hearts.png'),\n  require('../assets/playing-cards/king_of_hearts.png'),\n  require('../assets/playing-cards/2_of_spades.png'),\n  require('../assets/playing-cards/3_of_spades.png'),\n  require('../assets/playing-cards/4_of_spades.png'),\n  require('../assets/playing-cards/5_of_spades.png'),\n  require('../assets/playing-cards/6_of_spades.png'),\n  require('../assets/playing-cards/7_of_spades.png'),\n  require('../assets/playing-cards/8_of_spades.png'),\n  require('../assets/playing-cards/9_of_spades.png'),\n  require('../assets/playing-cards/10_of_spades.png'),\n  require('../assets/playing-cards/ace_of_spades.png'),\n  require('../assets/playing-cards/jack_of_spades.png'),\n  require('../assets/playing-cards/queen_of_spades.png'),\n  require('../assets/playing-cards/king_of_spades.png'),  */\n\n  require('../assets/animals/bee.png'),\n  require('../assets/animals/cheetah.png'),\n  require('../assets/animals/croc.png'),\n  require('../assets/animals/deer.png'),\n  require('../assets/animals/dog.png'),\n  require('../assets/animals/dolphin.png'),\n  require('../assets/animals/elephant.png'),\n  require('../assets/animals/fox.png'),\n  require('../assets/animals/giraffe.png'),\n  require('../assets/animals/kangaroo.png'),\n  require('../assets/animals/koala.png'),\n  require('../assets/animals/lemur.png'),\n  require('../assets/animals/monkey.png'),\n  require('../assets/animals/ostrich.png'),\n  require('../assets/animals/panda.png'),\n  require('../assets/animals/rabbit.png'),\n  require('../assets/animals/rhino.png'),\n  require('../assets/animals/shark.png'),\n  require('../assets/animals/sheep.png'),\n  require('../assets/animals/snake.png'),\n  require('../assets/animals/tiger.png'),\n  require('../assets/animals/tortoise.png'),\n  require('../assets/animals/tucan.png'),\n  require('../assets/animals/zebra.png'),\n];\n","import {Dimensions, StyleSheet} from 'react-native';\n\nconst screen = Dimensions.get('window');\nconst CARD_WIDTH = Math.floor(screen.width * 0.125);\nconst CARD_HEIGHT = Math.floor(CARD_WIDTH * (323 / 222));\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'gray',\n    paddingTop: 10,\n    flex: 1,\n  },\n  title: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 20,\n  },\n  timer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 10,\n  },\n  safearea: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 10,\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderColor: '#fff',\n    borderWidth: 5,\n    borderRadius: 3,\n  },\n  cardImage: {\n    width: CARD_WIDTH,\n    height: CARD_HEIGHT,\n  },\n});\nexport default styles;\n","import React from 'react';\nimport {Image, TouchableOpacity, View} from 'react-native';\nimport styles from '../styles/styles';\n\nclass Card extends React.Component {\n  render() {\n    const onPress = this.props.onPress;\n    const solved = this.props.solved;\n    const isDisabled = this.props.isDisabled;\n    const displayImage = this.props.display\n      ? this.props.displayImage\n      : require('../assets/card.png');\n\n    return (\n      <TouchableOpacity disabled={solved || isDisabled} onPress={onPress}>\n        <View style={styles.card}>\n          <Image style={styles.cardImage} source={displayImage} />\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport {View} from 'react-native';\nimport styles from '../styles/styles';\n\nclass Row extends React.Component {\n  render() {\n    return <View style={styles.row}>{this.props.children}</View>;\n  }\n}\n\nexport default Row;\n","import React from 'react';\nimport {Image, Text, TouchableOpacity, View} from 'react-native';\nimport styles from '../styles/styles';\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      timer: 0,\n    };\n    this.initTimer();\n  }\n\n  initTimer = () => {\n    this.timer = setInterval(() => {\n      this.setState((prevState) => ({\n        timer: prevState.timer + 1,\n      }));\n    }, 1000);\n  };\n\n  refreshTimer = () => {\n    clearInterval(this.timer);\n    this.setState({timer: 0});\n    this.initTimer();\n  };\n\n  render() {\n    return (\n      <TouchableOpacity>\n        <Text style={styles.timer} id=\"timer\">\n          Timer:{this.state.timer}\n        </Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport {Image, Text, TouchableOpacity, View} from 'react-native';\nimport styles from '../styles/styles';\n\nclass Moves extends React.Component {\n  render() {\n    return (\n      <TouchableOpacity>\n        <Text style={styles.timer} id=\"steps\">\n          Moves:{this.props.total}\n        </Text>\n        <Text style={styles.timer} id=\"steps\">\n          Solved:{this.props.solved}\n        </Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default Moves;\n","import React from 'react';\nimport {AVAILABLE_CARDS} from '../data/availableCards';\nimport {\n  Alert,\n  Platform,\n  SafeAreaView,\n  StatusBar,\n  Text,\n  View,\n} from 'react-native';\nimport styles from '../styles/styles';\nimport Card from '../card/Card';\nimport Row from '../row/Row';\nimport Timer from '../dashboard/Timer';\nimport Moves from '../dashboard/Moves';\n\nclass Board extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rows: this.initRows(),\n      lastselected: {},\n      moves: 0,\n      count: 0,\n      isDisabled: false,\n    };\n    this.timerElement = React.createRef();\n  }\n\n  initRows = () => {\n    let arr = [];\n    let rows = [];\n    let columns = [];\n\n    while (arr.length < 30 / 2) {\n      let r = Math.floor(Math.random() * 24);\n      if (arr.indexOf(r) === -1) {\n        arr.push(r);\n      }\n    }\n    arr = arr.concat(arr);\n    arr = this.shuffleArray(arr);\n\n    arr.map((i, index) => {\n      let cardObj = {};\n      cardObj.id = index;\n      cardObj.display = false;\n      cardObj.solved = false;\n      cardObj.value = AVAILABLE_CARDS[i];\n      columns.push(cardObj);\n      if ((index + 1) % 5 === 0) {\n        rows.push(columns);\n        columns = [];\n      }\n    });\n    return rows;\n  };\n\n  shuffleArray = (array) => {\n    const newArr = array.slice();\n    for (let i = newArr.length; i; i -= 1) {\n      const j = Math.floor(Math.random() * i);\n      const x = newArr[i - 1];\n      newArr[i - 1] = newArr[j];\n      newArr[j] = x;\n    }\n    return newArr;\n  };\n\n  reset = () => {\n    this.timerElement.current.refreshTimer();\n    let rows = this.initRows();\n    this.setState({\n      rows: rows,\n      lastselected: {},\n      moves: 0,\n      count: 0,\n      isDisabled: false,\n    });\n  };\n\n  onCardSelect = async (card) => {\n    this.state.rows.map((row, rowIndex) => {\n      row.map(async (r) => {\n        if (r.id === card.id) {\n          r.display = true;\n          if (Object.keys(this.state.lastselected).length === 0) {\n            this.setState({lastselected: r});\n          } else {\n            if (\n              r.value === this.state.lastselected.value &&\n              r.id !== this.state.lastselected.id\n            ) {\n              r.solved = true;\n              await this.setState({\n                moves: this.state.moves + 1,\n                count: this.state.count + 1,\n              });\n              this.state.rows.map((row, rowIndex) => {\n                row.map((r) => {\n                  if (r.id === this.state.lastselected.id) {\n                    r.solved = true;\n                    this.state.lastselected = {};\n                  }\n                });\n              });\n              await this.setState({rows: this.state.rows});\n              if (this.state.count == 1) {\n                this.onFinish();\n              }\n            } else {\n              setTimeout(() => {\n                this.state.rows.map((row, rowIndex) => {\n                  row.map((r) => {\n                    if (\n                      r.id === this.state.lastselected.id &&\n                      r.solved !== true\n                    ) {\n                      r.display = false;\n                      card.display = false;\n                      this.setState({\n                        moves: this.state.moves + 1,\n                        lastselected: {},\n                        isDisabled: false,\n                      });\n                    }\n                  });\n                });\n                this.setState({rows: this.state.rows});\n              }, 1000);\n              this.state.isDisabled = true;\n            }\n          }\n        }\n      });\n    });\n    await this.setState({rows: this.state.rows});\n  };\n\n  displayAlert = () => {\n    if (Platform.OS === 'web') {\n      const confirmAction = window.confirm(\n        'Congratulations!!' +\n          `You have completed the game in ${this.state.moves} moves.`,\n      );\n      if (confirmAction) {\n        this.reset();\n      }\n      return;\n    } else {\n      Alert.alert(\n        'Congratulations!!',\n        `You have completed the game in ${this.state.moves} moves.`,\n        [{text: 'OK', onPress: this.reset}],\n        {cancelable: false},\n      );\n    }\n  };\n\n  onFinish = () => {\n    setTimeout(() => this.displayAlert(), 1);\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <StatusBar barStyle=\"light-content\" />\n        <Text style={styles.title}>Memory Matching Game</Text>\n        <Timer ref={this.timerElement} />\n        <Moves total={this.state.moves} solved={this.state.count} />\n        <SafeAreaView style={styles.safearea}>\n          {this.state.rows.map((row, rowIndex) => (\n            <Row key={rowIndex} index={rowIndex}>\n              {row.map((card, index) => {\n                return (\n                  <Card\n                    key={card.id}\n                    isDisabled={this.state.isDisabled}\n                    display={card.display}\n                    solved={card.solved}\n                    displayImage={card.value}\n                    onPress={() => this.onCardSelect(card)}\n                  />\n                );\n              })}\n            </Row>\n          ))}\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nexport default Board;\n","/**\n * @format\n */\n\nimport {AppRegistry} from 'react-native';\nimport Board from './App/board/Board';\nimport {name as appName} from './app.json';\n\nAppRegistry.registerComponent(appName, () => Board);\nAppRegistry.runApplication(appName, {\n  rootTag: document.getElementById('memory-game'),\n});\n"],"sourceRoot":""}