{"version":3,"sources":["App/assets/animals/bee.png","App/assets/animals/cheetah.png","App/assets/animals/croc.png","App/assets/animals/deer.png","App/assets/animals/dog.png","App/assets/animals/dolphin.png","App/assets/animals/elephant.png","App/assets/animals/fox.png","App/assets/animals/giraffe.png","App/assets/animals/kangaroo.png","App/assets/animals/koala.png","App/assets/animals/lemur.png","App/assets/animals/monkey.png","App/assets/animals/ostrich.png","App/assets/animals/panda.png","App/assets/animals/rabbit.png","App/assets/animals/rhino.png","App/assets/animals/shark.png","App/assets/animals/sheep.png","App/assets/animals/snake.png","App/assets/animals/tiger.png","App/assets/animals/tortoise.png","App/assets/animals/tucan.png","App/assets/animals/zebra.png","App/assets/card.png","App/data/availableCards.js","App/styles/styles.js","App/card/Card.js","App/row/Row.js","App/board/Board.js","index.js"],"names":["module","exports","AVAILABLE_CARDS","require","screen","Dimensions","get","CARD_WIDTH","Math","floor","width","CARD_HEIGHT","styles","StyleSheet","create","container","backgroundColor","paddingTop","flex","title","alignItems","justifyContent","textAlign","color","fontSize","timer","safearea","row","flexDirection","marginVertical","card","borderColor","borderWidth","borderRadius","cardImage","height","Card","onPress","this","props","displayImage","display","TouchableOpacity","View","style","Image","source","React","Component","Row","children","Board","initRows","arr","rows","columns","length","r","random","indexOf","push","concat","shuffleArray","map","i","index","cardObj","id","solved","value","array","newArr","slice","j","x","reset","setState","steps","lastselected","count","onCardSelect","a","state","rowIndex","Object","keys","console","log","setTimeout","initTimer","onFinish","setInterval","prevState","displayAlert","Platform","OS","Alert","alert","text","cancelable","window","confirm","clearInterval","StatusBar","barStyle","Text","SafeAreaView","key","AppRegistry","registerComponent","appName","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.4dc50e41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bee.ee9a8073.png\";","module.exports = __webpack_public_path__ + \"static/media/cheetah.b7262f53.png\";","module.exports = __webpack_public_path__ + \"static/media/croc.0e41b832.png\";","module.exports = __webpack_public_path__ + \"static/media/deer.5b9a2f77.png\";","module.exports = __webpack_public_path__ + \"static/media/dog.bfe4271b.png\";","module.exports = __webpack_public_path__ + \"static/media/dolphin.40b9276b.png\";","module.exports = __webpack_public_path__ + \"static/media/elephant.cb52ba95.png\";","module.exports = __webpack_public_path__ + \"static/media/fox.65532169.png\";","module.exports = __webpack_public_path__ + \"static/media/giraffe.6769b4c1.png\";","module.exports = __webpack_public_path__ + \"static/media/kangaroo.36602689.png\";","module.exports = __webpack_public_path__ + \"static/media/koala.0907daa2.png\";","module.exports = __webpack_public_path__ + \"static/media/lemur.b7991b0a.png\";","module.exports = __webpack_public_path__ + \"static/media/monkey.9c22ed4a.png\";","module.exports = __webpack_public_path__ + \"static/media/ostrich.b2dc5cca.png\";","module.exports = __webpack_public_path__ + \"static/media/panda.6f844508.png\";","module.exports = __webpack_public_path__ + \"static/media/rabbit.bf9198bf.png\";","module.exports = __webpack_public_path__ + \"static/media/rhino.8bcd07a1.png\";","module.exports = __webpack_public_path__ + \"static/media/shark.05b18c56.png\";","module.exports = __webpack_public_path__ + \"static/media/sheep.937ee6c0.png\";","module.exports = __webpack_public_path__ + \"static/media/snake.bad46740.png\";","module.exports = __webpack_public_path__ + \"static/media/tiger.2218c52f.png\";","module.exports = __webpack_public_path__ + \"static/media/tortoise.8c4e7aaa.png\";","module.exports = __webpack_public_path__ + \"static/media/tucan.9df862bc.png\";","module.exports = __webpack_public_path__ + \"static/media/zebra.26d43ecd.png\";","module.exports = __webpack_public_path__ + \"static/media/card.33d780bd.png\";","export const AVAILABLE_CARDS = [\n  /*  require('../assets/playing-cards/2_of_clubs.png'),\n  require('../assets/playing-cards/3_of_clubs.png'),\n  require('../assets/playing-cards/4_of_clubs.png'),\n  require('../assets/playing-cards/5_of_clubs.png'),\n  require('../assets/playing-cards/6_of_clubs.png'),\n  require('../assets/playing-cards/7_of_clubs.png'),\n  require('../assets/playing-cards/8_of_clubs.png'),\n  require('../assets/playing-cards/9_of_clubs.png'),\n  require('../assets/playing-cards/10_of_clubs.png'),\n  require('../assets/playing-cards/ace_of_clubs.png'),\n  require('../assets/playing-cards/jack_of_clubs.png'),\n  require('../assets/playing-cards/queen_of_clubs.png'),\n  require('../assets/playing-cards/king_of_clubs.png'),\n  require('../assets/playing-cards/2_of_diamonds.png'),\n  require('../assets/playing-cards/3_of_diamonds.png'),\n  require('../assets/playing-cards/4_of_diamonds.png'),\n  require('../assets/playing-cards/5_of_diamonds.png'),\n  require('../assets/playing-cards/6_of_diamonds.png'),\n  require('../assets/playing-cards/7_of_diamonds.png'),\n  require('../assets/playing-cards/8_of_diamonds.png'),\n  require('../assets/playing-cards/9_of_diamonds.png'),\n  require('../assets/playing-cards/10_of_diamonds.png'),\n  require('../assets/playing-cards/ace_of_diamonds.png'),\n  require('../assets/playing-cards/jack_of_diamonds.png'),\n  require('../assets/playing-cards/queen_of_diamonds.png'),\n  require('../assets/playing-cards/king_of_diamonds.png'),\n  require('../assets/playing-cards/2_of_hearts.png'),\n  require('../assets/playing-cards/3_of_hearts.png'),\n  require('../assets/playing-cards/4_of_hearts.png'),\n  require('../assets/playing-cards/5_of_hearts.png'),\n  require('../assets/playing-cards/6_of_hearts.png'),\n  require('../assets/playing-cards/7_of_hearts.png'),\n  require('../assets/playing-cards/8_of_hearts.png'),\n  require('../assets/playing-cards/9_of_hearts.png'),\n  require('../assets/playing-cards/10_of_hearts.png'),\n  require('../assets/playing-cards/ace_of_hearts.png'),\n  require('../assets/playing-cards/jack_of_hearts.png'),\n  require('../assets/playing-cards/queen_of_hearts.png'),\n  require('../assets/playing-cards/king_of_hearts.png'),\n  require('../assets/playing-cards/2_of_spades.png'),\n  require('../assets/playing-cards/3_of_spades.png'),\n  require('../assets/playing-cards/4_of_spades.png'),\n  require('../assets/playing-cards/5_of_spades.png'),\n  require('../assets/playing-cards/6_of_spades.png'),\n  require('../assets/playing-cards/7_of_spades.png'),\n  require('../assets/playing-cards/8_of_spades.png'),\n  require('../assets/playing-cards/9_of_spades.png'),\n  require('../assets/playing-cards/10_of_spades.png'),\n  require('../assets/playing-cards/ace_of_spades.png'),\n  require('../assets/playing-cards/jack_of_spades.png'),\n  require('../assets/playing-cards/queen_of_spades.png'),\n  require('../assets/playing-cards/king_of_spades.png'),  */\n\n  require('../assets/animals/bee.png'),\n  require('../assets/animals/cheetah.png'),\n  require('../assets/animals/croc.png'),\n  require('../assets/animals/deer.png'),\n  require('../assets/animals/dog.png'),\n  require('../assets/animals/dolphin.png'),\n  require('../assets/animals/elephant.png'),\n  require('../assets/animals/fox.png'),\n  require('../assets/animals/giraffe.png'),\n  require('../assets/animals/kangaroo.png'),\n  require('../assets/animals/koala.png'),\n  require('../assets/animals/lemur.png'),\n  require('../assets/animals/monkey.png'),\n  require('../assets/animals/ostrich.png'),\n  require('../assets/animals/panda.png'),\n  require('../assets/animals/rabbit.png'),\n  require('../assets/animals/rhino.png'),\n  require('../assets/animals/shark.png'),\n  require('../assets/animals/sheep.png'),\n  require('../assets/animals/snake.png'),\n  require('../assets/animals/tiger.png'),\n  require('../assets/animals/tortoise.png'),\n  require('../assets/animals/tucan.png'),\n  require('../assets/animals/zebra.png'),\n];\n","import {Dimensions, StyleSheet} from 'react-native';\n\nconst screen = Dimensions.get('window');\nconst CARD_WIDTH = Math.floor(screen.width * 0.125);\nconst CARD_HEIGHT = Math.floor(CARD_WIDTH * (323 / 222));\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'gray',\n    paddingTop: 10,\n    flex: 1,\n  },\n  title: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 20,\n  },\n  timer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 10,\n  },\n  safearea: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 10,\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderColor: '#fff',\n    borderWidth: 5,\n    borderRadius: 3,\n  },\n  cardImage: {\n    width: CARD_WIDTH,\n    height: CARD_HEIGHT,\n  },\n});\nexport default styles;\n","import React from 'react';\nimport {Image, TouchableOpacity, View} from 'react-native';\nimport styles from '../styles/styles';\n\nclass Card extends React.Component {\n  render() {\n    const onPress = this.props.onPress;\n    const displayImage = this.props.display\n      ? this.props.displayImage\n      : require('../assets/card.png');\n\n    return (\n      <TouchableOpacity onPress={onPress}>\n        <View style={styles.card}>\n          <Image style={styles.cardImage} source={displayImage} />\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport {View} from 'react-native';\nimport styles from '../styles/styles';\n\nclass Row extends React.Component {\n  render() {\n    return <View style={styles.row}>{this.props.children}</View>;\n  }\n}\n\nexport default Row;\n","import React from 'react';\nimport {AVAILABLE_CARDS} from '../data/availableCards';\nimport {\n  Alert,\n  Platform,\n  SafeAreaView,\n  StatusBar,\n  Text,\n  View,\n} from 'react-native';\nimport styles from '../styles/styles';\nimport Card from '../card/Card';\nimport Row from '../row/Row';\n\nclass Board extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      steps: 0,\n      rows: this.initRows(),\n      lastselected: {},\n      count: 0,\n      timer: 0,\n    };\n  }\n\n  initRows = () => {\n    let arr = [];\n    let rows = [];\n    let columns = [];\n\n    while (arr.length < 30 / 2) {\n      let r = Math.floor(Math.random() * 24);\n      if (arr.indexOf(r) === -1) {\n        arr.push(r);\n      }\n    }\n    arr = arr.concat(arr);\n    arr = this.shuffleArray(arr);\n\n    arr.map((i, index) => {\n      let cardObj = {};\n      cardObj.id = index;\n      cardObj.display = false;\n      cardObj.solved = false;\n      cardObj.value = AVAILABLE_CARDS[i];\n      columns.push(cardObj);\n      if ((index + 1) % 5 === 0) {\n        rows.push(columns);\n        columns = [];\n      }\n    });\n    return rows;\n  };\n\n  shuffleArray = (array) => {\n    const newArr = array.slice();\n    for (let i = newArr.length; i; i -= 1) {\n      const j = Math.floor(Math.random() * i);\n      const x = newArr[i - 1];\n      newArr[i - 1] = newArr[j];\n      newArr[j] = x;\n    }\n    return newArr;\n  };\n\n  reset = () => {\n    let rows = this.initRows();\n    this.setState({\n      steps: 0,\n      rows: rows,\n      lastselected: {},\n      count: 0,\n      timer: 0,\n    });\n  };\n\n  onCardSelect = async (card) => {\n    await this.setState({steps: this.state.steps + 1});\n    this.state.rows.map((row, rowIndex) => {\n      row.map(async (r) => {\n        if (r.id === card.id) {\n          r.display = true;\n          if (Object.keys(this.state.lastselected).length === 0) {\n            this.setState({lastselected: r});\n          } else {\n            if (\n              r.value === this.state.lastselected.value &&\n              r.id !== this.state.lastselected.id\n            ) {\n              await this.setState({count: this.state.count + 2});\n              console.log('match' + this.state.count);\n              r.solved = true;\n              this.state.lastselected = {};\n              this.state.rows.map((row, rowIndex) => {\n                row.map((r) => {\n                  if (r.id === this.state.lastselected.id) {\n                    r.solved = true;\n                  }\n                });\n              });\n            } else {\n              setTimeout(() => {\n                this.state.rows.map((row, rowIndex) => {\n                  row.map((r) => {\n                    if (\n                      r.id === this.state.lastselected.id &&\n                      r.solved !== true\n                    ) {\n                      r.display = false;\n                      card.display = false;\n                      this.state.lastselected = {};\n                    }\n                  });\n                });\n                this.setState({rows: this.state.rows});\n              }, 1000);\n            }\n          }\n        }\n      });\n    });\n    this.setState({rows: this.state.rows});\n\n    console.log(this.state.steps);\n    if (this.state.steps == 1) {\n      this.initTimer();\n    }\n\n    console.log('last' + this.state.count);\n    if (this.state.count == 30) {\n      this.onFinish();\n    }\n  };\n\n  initTimer = () => {\n    this.timer = setInterval(() => {\n      this.setState((prevState) => ({\n        timer: prevState.timer + 1,\n      }));\n    }, 1000);\n  };\n\n  displayAlert = () => {\n    if (Platform.OS === 'web') {\n      const confirmAction = window.confirm(\n        'Congratulations!!',\n        `You have completed the puzzle in ${this.state.steps} steps and ${this.state.timer} seconds.`,\n      );\n      if (confirmAction) {\n        this.reset();\n      }\n      return;\n    } else {\n      Alert.alert(\n        'Congratulations!!',\n        `You have completed the puzzle in ${this.state.steps} steps and ${this.state.timer} seconds.`,\n        [{text: 'OK', onPress: this.reset}],\n        {cancelable: false},\n      );\n    }\n  };\n\n  onFinish = () => {\n    clearInterval(this.timer);\n    setTimeout(() => this.displayAlert(), 1);\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <StatusBar barStyle=\"light-content\" />\n        <Text style={styles.title}>Memory Game</Text>\n        <Text style={styles.timer} id=\"timer\">\n          Timer:{this.state.timer}\n        </Text>\n        <Text style={styles.timer}>Steps:{this.state.steps}</Text>\n        <SafeAreaView style={styles.safearea}>\n          {this.state.rows.map((row, rowIndex) => (\n            <Row key={rowIndex} index={rowIndex}>\n              {row.map((card, index) => {\n                return (\n                  <Card\n                    key={card.id}\n                    display={card.display}\n                    solved={card.solved}\n                    displayImage={card.value}\n                    onPress={() => this.onCardSelect(card)}\n                  />\n                );\n              })}\n            </Row>\n          ))}\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nexport default Board;\n","/**\n * @format\n */\n\nimport {AppRegistry} from 'react-native';\nimport Board from './App/board/Board';\nimport {name as appName} from './app.json';\n\nAppRegistry.registerComponent(appName, () => Board);\nAppRegistry.runApplication(appName, {\n  rootTag: document.getElementById('memory-game'),\n});\n"],"sourceRoot":""}